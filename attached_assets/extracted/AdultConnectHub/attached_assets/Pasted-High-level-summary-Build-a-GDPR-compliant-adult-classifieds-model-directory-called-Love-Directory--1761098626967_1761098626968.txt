High-level summary
Build a GDPR-compliant adult classifieds + model directory called Love Directory using Nuxt.js (SSR) with a Supabase (EU) backend. Payments are Bitcoin-only via NOWPayments. Internal credit = Love Coins (1 Love Coin = $1 USD). Yoti integration for optional verification (sandbox). Plausible for cookieless analytics. Bunny Fonts for UI. Cookie consent via tarteaucitron.js. Dark, neutral, Eros-style visual aesthetic. PWA-enabled. Responsive and mobile-first.
Priority: deliver a working MMP with the following minimum acceptance criteria: account/signup, create/edit/delete listings, buy Love Coins via NOWPayments (sandbox), token crediting via webhook, spend tokens for upgrades and 30-day tiers, bump/available-now logic and cooldowns, reports flow (reactive moderation), admin moderation dashboard, GDPR export/delete endpoints, Yoti sandbox wiring, Plausible + tarteaucitron cookie gating, and all UI strictly grid-based for listings (see strict layout rules below).
Important global constraint (must be enforced everywhere)
Listings must never render in a one-item-per-row vertical list.
All listing displays — homepage sections, category pages, search results, related/similar carousels, and mobile views — must use compact, image-first grids with multiple model cards per row. No exceptions.
Detailed requirements (copy exactly)
Technology stack & hosting
Frontend: Nuxt 3 (Vue 3) with SSR for SEO and pre-rendered meta tags for each listing.
State: Pinia.
Styling: Tailwind CSS, dark-first theme with high contrast and subtle accent.
Backend: Supabase (Postgres + Auth + Storage) in EU region.
Payments: NOWPayments (Bitcoin only). Use NOWPayments sandbox for dev/testing, implement webhook verification and webhook handler to credit Love Coins.
Verification: Yoti SDK (sandbox).
Analytics: Plausible (cookieless) — only load after explicit consent.
Fonts: Bunny Fonts (fonts.bunny.net).
Cookie consent: tarteaucitron.js, default: essential only.
Host: Vercel EU or Replit EU; SSR runtime environment.
PWA: manifest + offline basics via service worker.
Users & roles
Models: create/manage listings; buy Love Coins; purchase 30-day tier (Free/Basic/VIP/Elite); purchase upgrades (listed below).
Classified Users: can post in Personals categories (anonymous or minimal signup); no paid tiers.
Admin/Moderators: view reports, approve/reject/hide listings, manage banners and homepage spots.
All changes to personal data comply with GDPR (export and delete endpoints).
Currency & tiers
Love Coins: internal credit; 1 coin = $1 USD.
Buying Love Coins: user requests purchase amount (integer coins). Create NOWPayments invoice (USD price), pay with BTC; on webhook confirm, credit tokens to user wallet.
Tiers are 30-day purchases (non-recurring). When a tier is purchased, set tier and tier_expires for 30 days. After expiry revert to Free.
Tier capabilities summarized:
Free: 2 ads, 8 photos, 1 YouTube video, Available Now every 6 hrs (active 4 hrs), bump every 4 hrs.
Basic: 3 ads, 16 images, 2 videos, Available Now anytime, bump every 2 hrs (1x per category), Basic badge, appears in Paid Listings filter.
VIP: 4 ads, 32 images, 4 videos, Available Now anytime, bump every 1 hr, VIP badge, 10% upgrade discount.
Elite: 5 ads, 40 images, 8 videos, Available Now anytime, bump every 30 mins, Elite badge, 15% upgrade discount.
Listings and categories
Two primary listing types: Model listings and Personals/classifieds (separate category trees).
Personals categories (Romantic/Swingers/Non-romantic) and Model categories (Escorts, BDSM & Fetish, Massage, Content Creators, etc.). Include subcategories as provided.
Each listing includes: title, slug, short tagline, body, category/subcategory, city/state/country, price_tokens optional, images array, videos (YouTube or uploaded depending on tier), owner id, status, bump timestamp, available_now boolean + expiry, upgrade flags (highlight_until, featured_until, etc.), created_at/updated_at.
Images: strip EXIF on upload; generate responsive sizes; store on Supabase Storage with CDN.
Absolute layout rule — GRID everywhere
Desktop: 4–5 cards per row (adaptive widths).
Tablet: 3 cards per row.
Mobile: 2–3 cards per row depending on viewport width — ensure never 1 card per row.
Cards: image-dominant thumbnail, small overlay ribbons/tags (Available Now, VIP, Elite, Specials, Paid), title, city, short tagline, price tokens badge.
Grid behavior: uniform card heights, masonry-style if used but maintain 2+ cards per row at all times; infinite scroll to append rows; lazy loading images; quick fade-in animation on entry.
Quick preview: tap/hover opens a lightweight overlay with first images slideshow and primary CTA (View Profile).
No list view toggle that results in one-per-row for any screen size. If user chooses “compact”, this reduces padding and font sizes but still preserves multi-card rows.
Upgrades (token-based)
Implement the following purchasable upgrades, payable with Love Coins. Orders must be atomic: deduct tokens and apply upgrade in one transaction.
Highlight Listing: color-background or boxed styling; small badge. Time-based (e.g., hours or days).
Specials Tag Upgrade: adds “Specials/Limited-Time” badge and short note; include filter to find Specials.
Image Slideshow Upgrade: rotating 4–5 image slideshow replacing static thumbnail across grids and homepage previews.
Paid Listing Upgrade: allows Free-tier listing to appear in Paid Listings filter; does not change tier or bump frequency.
Bump Anytime Upgrade: one-off instant top bump that bypasses cooldown (one-use per purchase unless bought in packs).
Homepage Upgrade (Limited Spots): places listing in homepage featured section. Limited concurrency; rotation logic to ensure fairness.
Top & Bottom Banner Upgrades (Category + City): large banner at top or bottom of category pages; rotation among up to 3 advertisers per slot.
Personals Interstitial Banner: banners in personals pages (every 15th post) rotating among buyers. Durations: 1/3/7/30 days.
Auto-Bump Packages & Bundles: optional later, but system should allow packs of bump-anytime tokens.
Bump & Available Now logic
Bump cooldown per tier (free 4h, basic 2h, VIP 1h, elite 30m). Bump action updates bumped_at and increments bump_count. Store bump history.
Bump Anytime upgrade allows immediate bump regardless of cooldown.
Available Now: Free can enable every 6 hours for up to 4 hours (client-side timer + server enforcement). Paid tiers: enable anytime, manual turn-off or expiry based on purchased duration.
Back-end must enforce cooldowns and available_now scheduling; front-end shows countdown to next allowed bump or enable time.
Payments & token flow (Bitcoin only)
Users choose number of Love Coins to buy; create invoice via NOWPayments API with price in USD (tokens = USD). Use BTC as pay_currency.
Store pending token_purchases record with invoice id and status pending.
NOWPayments webhook endpoint verifies event and, on successful payment, credits Love Coins to user balance in a safe atomic update.
Show pending invoice status in dashboard until confirmed.
No fiat/CC payments in MMP.
P2P wallet transfers: optional peer transfers to be exposed in UI as future enhancement — initial MMP should focus on purchases and spends.
Verification (Yoti)
Optionally allow models to complete Yoti verification in sandbox. Store verification status and Yoti activity id. Show “Verified” badge when verified.
Consent required; Yoti flows only when user explicitly opts in.
Moderation & reports (reactive only)
Report button available on every listing. Capture reason, optional details, and reporter id (anonymous allowed).
Reports go to a moderated “Reports Queue” in admin dashboard. Admins review and choose actions: warn, hide, remove, escalate.
No proactive automated scanning of images/content. The system should not run NSFW or face-detection scans by default (unless added later).
Store incident and moderation decision logs with timestamps (retention policy consistent with GDPR).
Privacy, compliance & GDPR
Minimal data retention; server-side sessions using HttpOnly cookies; avoid storing PII in localStorage.
Cookie consent via tarteaucitron.js. Plausible analytics only after consent.
Privacy policy and ToS pages included, with explicit free-speech clause and DMCA takedown process description. Provide GDPR data export and account deletion endpoints.
Image EXIF stripped on upload.
Admin features
View and manage reports queue.
Manage homepage featured spots and banners.
Force hide, remove, or restore listings.
View token purchases and transactions.
Grant/revoke moderator roles (via JWT claim).
Export moderation packs (zip of listing content, timestamps) for legal or escalation needs.
Search, discovery & SEO
Server-side search with filters (category, subcategory, city/state, price_tokens range, available_now, paid listings, specials).
Autocomplete suggestions from categories and cities.
Each listing must have SEO-friendly meta tags and OG tags generated server-side.
Sitemap generation, robots.txt configured to avoid indexing admin routes.
UI / UX specifics
Dark theme, image-first styling like Eros.com.
Large thumbnails in grid, minimal overlay text.
Tiny corner ribbons for tags (Available Now, Verified, VIP, Elite).
Smooth transitions for image slideshows; lazy loading and placeholder blur.
Accessibility: ARIA labels, keyboard nav, focus management.
Data model & server logic (descriptive)
Users: id, email, username, display name, token_balance, tier, tier_expires, yoti_verified, created_at.
Listings: id, owner_id, title, slug, description, type, category, city, price_tokens, images array, bump timestamps, available_now + expires, upgrade flags (highlight_until, featured_until, etc.), status.
Token purchases: user_id, tokens_amount, nowpayments_invoice_id, crypto_amount, status, created_at.
Reports: listing_id, reporter_id (nullable), reason, details, created_at, status.
Token spends: record of each spend (user_id, listing_id optional, spend_type, tokens_amount, created_at).
Back-end must implement atomic update functions for crediting and debiting Love Coins.
Acceptance criteria (deliverables)
Signup/login via email (Supabase Auth) working.
Create and manage listings in Model and Personals categories.
Love Coins purchase flow via NOWPayments sandbox: invoice creation, webhook confirmation, atomic credit.
Spend Love Coins to buy upgrades and 30-day tiers; token balance updates atomically.
Bump and Available Now functions enforced server-side with cooldowns.
All listing index pages render grids only: desktop 4–5/row, tablet 3/row, mobile 2–3/row; never 1 per row.
Image uploads with EXIF stripping and responsive sizing.
Reports create admin queue; admin can hide/remove listings.
Yoti sandbox verification wired and sets verified status.
Plausible analytics only load after tarteaucitron consent.
GDPR export and account deletion endpoints available.
PWA manifest present; SSR meta tags for SEO.
Testing & QA
Unit tests for payment webhook handling, token credit/debit, bump cooldown enforcement.
Integration/E2E: signup → buy tokens → create listing → purchase highlight → bump → report → admin hide.
Lighthouse audits targeted for SEO, accessibility, and PWA scores.
Deployment steps (summary)
Provision Supabase (EU region), configure Auth and Storage.
Run DB schema and RLS policies (as described).
Set environment variables: SUPABASE_URL, SUPABASE_ANON_KEY, SUPABASE_SERVICE_ROLE_KEY, NOWPAYMENTS_API_KEY, NOWPAYMENTS_WEBHOOK_SECRET, YOTI_CREDENTIALS, PLAUSIBLE_DOMAIN, APP_URL, NODE_ENV.
Configure NOWPayments webhook to point to /api/webhook/nowpayments.
Deploy Nuxt SSR app to Vercel EU or Replit; verify HTTPS and secure cookies.
Developer task list (for Agent 3)
Create project skeleton: Nuxt 3 app, Pinia, Tailwind, plugin hooks for Plausible & tarteaucitron.
Add pages and components per page structure; ensure grid layout enforced globally.
Implement Supabase integration for Auth, DB CRUD, Storage.
Implement NOWPayments invoice creation endpoint and webhook handler; implement atomic credit function.
Implement Yoti sandbox flow (server + client).
Build admin moderation UI and reports queue.
Implement GDPR export & delete endpoints.
Add tests and run full E2E flows.
Finalize PWA manifest and build for deployment.
Tone, UX and visual guidance for devs
Neutral, professional, discreet adult visual language.